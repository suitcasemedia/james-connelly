---
title:  "Little Miss Sentiment"
subtitle: "Twitter sentiment analysis"
author: "Jimmy"
avatar: "img/authors/jimmy.svg"
image: "img/happy.svg"
date:   2018-01-01 12:12:12
---
### Live URL: <a  target="_blank" href="http://little-miss-sentiment.herokuapp.com/">http://little-miss-sentiment.herokuapp.com/</a> 


I came up with this idea when I was trying to think of what kind of digital tools might be useful for journalists. 
For example if you wanted to gather background information for a an upcoming politcal event - you could type in a  politicians name. The app would  then fetch 100 Tweets containing that persons name and then take an average sentiment analysis from those Tweets. This in theory could be a way to guage public sentiment about that person. As it turns out, I learned from doing this that most of the Tweets are really  quite neutral and you have to type in something really extreme like 'Death Hell' to get a negative score or 'Heaven happy' to get a positive score. Everything else tends to be between a score of 0.5 and -0.5 which is neutral according to VADAR sentiment anyalsis system that the app uses. 

### How does it work?
The front end is built with React and Redux and uses the fetch api to get and receive requests from the back end.
The back end is build with python and Flask and it does 6 basic tasks:

1. Gets the query text from the form that then gets  sent  over from the front end.
2. Takes that query text and sends it to the Twitter api
3. Receives 100 Tweets from the Twitter API containing the query text.
4. Runs the 100 Tweets through VADAR sentiment analysis library.
5. Vadar returns an average sentiment score for the all the words in the tweets.
6. The API returns a json string that contains the final sentiment score and the 100 tweets returned from the Twitter API

The backend is built with python and Flask. The reason I used python for the api is because VADAR is written in python.
